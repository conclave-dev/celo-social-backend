# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
orbs:
  go: circleci/go@0.2.0

commands:
  test-api-endpoint:
    parameters:
      endpoint:
        type: string
        default: /service/health
      params:
        type: string
        default: "{}"
      expected:
        type: string
        default: "OK"
    steps:
      - run:
          name: make-request
          command: |
            GOT=$(curl -X POST << parameters.endpoint >> -d '<< parameters.params >>' -H "Content-Type: application/json")
            WANT='{"data":<< parameters.expected >>}'
              echo "[Want: $WANT]"
              echo "[Got: $GOT]"
            if [ "$GOT" != "$WANT" ]; then
              echo "===Error==="
              echo "\n[Want: $WANT]\n"
              echo "\n[Got: $GOT]\n"
              echo "===Error==="
              exit 1
            fi

jobs:
  test:
    docker:
      - image: circleci/golang:1.13
      - image: circleci/redis:5.0.7-alpine
    working_directory: /go/src/github.com/stella-zone/celo-social-backend
    environment:
      APP_URL: "http://localhost:8081"
    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for kvstore
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run:
          command: go run main.go
          background: true
      - run: sleep 10
      - run:
          command: go test ./kvstore -v
      - run:
          name: "Wait for http server to start"
          command: wget --retry-connrefused --waitretry=2 -t 5 "$APP_URL/service/health" > /dev/null
      - test-api-endpoint:
          endpoint: "$APP_URL/user/update"
          params: '{"address":"0x2EE2a7FD94a31CF1e6Db3875F4fd3d961b15de17","photoURL":"http://celo.org"}'
          expected: '{"data":{"Hash":"742c81a0a2f3f2c2ff4c9191499360d13e631f5c4610571f94fac01921882e18","Update":"{\"address\":\"0x2ee2a7fd94a31cf1e6db3875f4fd3d961b15de17\",\"photoURL\":\"http://celo.org\"}"}}'
      - test-api-endpoint:
          endpoint: "$APP_URL/user/update"
          params: '{"address":"0x2EE2a7FD94a31CF1e6Db3875F4fd3d961b15de17","photoURL":"http://celo.org"}'
          expected: "Update already exists"

workflows:
  test:
    jobs:
      - test
